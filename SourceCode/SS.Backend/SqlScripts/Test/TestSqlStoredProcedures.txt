CREATE TABLE [dbo].[NewManualIDReservations] (
    [reservationID]        INT           NOT NULL,
    [companyID]            INT           NOT NULL,
    [floorPlanID]          INT           NOT NULL,
    [spaceID]              CHAR (10)     NOT NULL,
    [reservationStartTime] DATETIME      NOT NULL,
    [reservationEndTime]   DATETIME      NOT NULL,
    [status]               NVARCHAR (50) NOT NULL,
    [userHash]             VARCHAR (50)  NOT NULL,  
    PRIMARY KEY CLUSTERED ([reservationID] ASC),
    FOREIGN KEY ([floorPlanID]) REFERENCES [dbo].[companyFloor] ([floorPlanID]),
    FOREIGN KEY ([spaceID], [companyID]) REFERENCES [dbo].[companyFloorSpaces] ([spaceID], [companyID]),
    FOREIGN KEY ([userHash]) REFERENCES [dbo].[userHash] ([hashedUsername])
);
CREATE TABLE [dbo].[NewAutoIDReservations] (
    [reservationID]        INT           IDENTITY (1, 1) NOT NULL,
    [companyID]            INT           NOT NULL,
    [floorPlanID]          INT           NOT NULL,
    [spaceID]              CHAR (10)     NOT NULL,
    [reservationStartTime] DATETIME      NOT NULL,
    [reservationEndTime]   DATETIME      NOT NULL,
    [status]               NVARCHAR (50) NOT NULL,
    [userHash]             VARCHAR (50)  NOT NULL,  
    PRIMARY KEY CLUSTERED ([reservationID] ASC),
    FOREIGN KEY ([floorPlanID]) REFERENCES [dbo].[companyFloor] ([floorPlanID]),
    FOREIGN KEY ([spaceID], [companyID]) REFERENCES [dbo].[companyFloorSpaces] ([spaceID], [companyID]),
    FOREIGN KEY ([userHash]) REFERENCES [dbo].[userHash] ([hashedUsername])
);






Procedures ----------------------------------------


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[CheckConflictingReservationsAutoID]
    @companyID INT,
    @floorPlanID INT,
    @spaceID NVARCHAR(255),
    @proposedStartDateTime DATETIME,
    @proposedEndDateTime DATETIME,
    @reservationIdToExclude INT = NULL  
AS
BEGIN
    SELECT reservationID
    FROM dbo.NewAutoIDReservations 
    WHERE companyID = @companyID
    AND floorPlanID = @floorPlanID 
    AND spaceID = @spaceID 
    AND status = 'Active'
    AND NOT (
        reservationEndTime <= @proposedStartDateTime
        OR reservationStartTime >= @proposedEndDateTime
    )
    AND (@reservationIdToExclude IS NULL OR reservationID != @reservationIdToExclude);
END;
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[CheckConflictingReservationsManualID]
    @companyID INT,
    @floorPlanID INT,
    @spaceID NVARCHAR(255),
    @proposedStartDateTime DATETIME,
    @proposedEndDateTime DATETIME,
    @reservationIdToExclude INT = NULL  
AS
BEGIN
    SELECT reservationID
    FROM dbo.NewManualIDReservations 
    WHERE companyID = @companyID
    AND floorPlanID = @floorPlanID 
    AND spaceID = @spaceID 
    AND status = 'Active'
    AND NOT (
        reservationEndTime <= @proposedStartDateTime
        OR reservationStartTime >= @proposedEndDateTime
    )
    AND (@reservationIdToExclude IS NULL OR reservationID != @reservationIdToExclude);
END;
GO









CREATE PROCEDURE UpdateReservationStatusManualID
AS
BEGIN
    UPDATE dbo.NewManualIDReservations
    SET Status = 'Passed'
    WHERE reservationEndTime < SYSDATETIME()
    AND Status = 'Active'
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[UpdateReservationStatusAutoID]
AS
BEGIN
    UPDATE dbo.NewAutoIDReservations
    SET Status = 'Passed'
    WHERE reservationEndTime < SYSDATETIME()
    AND Status = 'Active'
END